{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "initialize()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "multimimc7()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_hash(byte[],byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpQdXlhQ29udHJhY3RzLk1JTUMuY29udHJhY3QuTUlNQy5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgLy8gc3JjL1B1eWFDb250cmFjdHMvTUlNQy9jb250cmFjdC5weToxOQogICAgLy8gY2xhc3MgTUlNQyhBUkM0Q29udHJhY3QpOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "MIMC",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "initialize",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "multimimc7",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "verify_hash",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "data_sha256"
                    },
                    {
                        "type": "byte[]",
                        "name": "data_mimc"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}